---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/helm.toolkit.fluxcd.io/helmrelease_v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: myspeed
  namespace: myspeed
spec:
  interval: 15m
  chart:
    spec:
      chart: myspeed
      version: 1.2.1
      sourceRef:
        kind: HelmRepository
        name: truecharts
        namespace: flux-system
      interval: 15m
  timeout: 30m
  maxHistory: 3
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false  
  values:
    env:
      PROMETHEUS_ENABLED: "true"
    global:
      stopAll: false
    metrics:
      main:
        enabled: true
        type: "servicemonitor"
        endpoints:
          - port: main
            path: /api/prometheus/metrics
        targetSelector: main
        prometheusRule:
          enabled: false    
    ingress:
      main:
        enabled: true
        ingressClassName: internal
        integrations:
          homepage:
            enabled: true
            group: Apps
          certManager:
            enabled: true
            certificateIssuer: domain-0-le-prod
        hosts:
          - host: myspeed.${DOMAIN_0}
    credentials:
      s3:
        type: s3
        url: "${S3URL}"
        bucket: "${S3PREFIX}-myspeed"
        accessKey: "${S3ID}"
        secretKey: "${S3KEY}"
        encrKey: "${S3KEY}"
    persistence:
      data:
        volsync:
          - name: data
            type: restic
            credentials: s3
            dest:
              enabled: true
              cacheCapacity: 10Gi
            src:
              enabled: true
              cacheCapacity: 10Gi
              schedule: 40 23 * * *
  postRenderers:
    - kustomize:
        patches:
          - target:
              kind: Deployment
              name: myspeed
            patch: |
              apiVersion: apps/v1
              kind: Deployment
              metadata:
                name: myspeed
              spec:
                template:
                  spec:
                    initContainers:
                      - name: cleanup-sqlite
                        image: docker.io/nouchka/sqlite3:latest
                        imagePullPolicy: IfNotPresent
                        command:
                          - sh
                          - -c
                          - |
                            set -eu

                            DB="/myspeed/data/storage.db"
                            [ -f "$DB" ] || { echo "No DB at $DB, skipping"; exit 0; }

                            table_exists () {
                              echo "SELECT name FROM sqlite_master WHERE type='table' AND name='$1';" \
                                | sqlite3 "$DB" | grep -qx "$1"
                            }

                            for base in recommendations speedtests integration_data config; do
                              bkp="${base}_backup"
                              if table_exists "$bkp"; then
                                if ! table_exists "$base"; then
                                  echo "Restoring $bkp -> $base"
                                  echo "ALTER TABLE \"$bkp\" RENAME TO \"$base\";" | sqlite3 "$DB" || true
                                else
                                  echo "Dropping leftover $bkp"
                                  echo "DROP TABLE IF EXISTS \"$bkp\";" | sqlite3 "$DB" || true
                                fi
                              else
                                echo "No $bkp table; nothing to do"
                              fi
                            done

                            echo "SQLite cleanup complete."

          volumeMounts:
            - name: data
              mountPath: /myspeed/data

